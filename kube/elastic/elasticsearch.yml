# This sample sets up an Elasticsearch cluster with 2 nodes.
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
spec:
  version: $ELASTIC_VERSION
  nodeSets:
  - name: default
    config:
      # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value
      node.master: true
      node.data: true
      node.ingest: true
      node.ml: true
    podTemplate:
      metadata:
        labels:
          # additional labels for pods
          tier: $ELASTIC_ES_TIER
          component: elasticsearch
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - elasticsearch
                topologyKey: "kubernetes.io/hostname"
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        nodeSelector:
          tier: $ELASTIC_ES_TIER
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: $ELASTIC_ES_MEM_REQUEST
                cpu: $ELASTIC_ES_CPU_REQUEST
              limits:
                memory: $ELASTIC_ES_MEM_LIMIT
                cpu: $ELASTIC_ES_CPU_LIMIT
            env:
              - name: ES_JAVA_OPTS
                value: "-Xms2g -Xmx2g"
    count: $ELASTIC_ES_INSTANCES
    volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: $ELASTIC_VOLUME_SIZE
          storageClassName: local-storage
          selector:
            matchLabels:
              type: elasticsearch
#  - name: master
#    config:
#      # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value
#      node.master: true
#      node.data: false
#      node.ingest: false
#      node.ml: false
#    podTemplate:
#      metadata:
#        labels:
#          # additional labels for pods
#          tier: $ELASTIC_ES_MASTER_TIER
#          component: elasticsearch
#      spec:
#        affinity:
#          podAntiAffinity:
#            requiredDuringSchedulingIgnoredDuringExecution:
#              - labelSelector:
#                  matchExpressions:
#                    - key: component
#                      operator: In
#                      values:
#                        - elasticsearch
#                topologyKey: "kubernetes.io/hostname"
#        initContainers:
#          - name: sysctl
#            securityContext:
#              privileged: true
#            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
#        nodeSelector:
#          tier: $ELASTIC_ES_MASTER_TIER
#        containers:
#          - name: elasticsearch
#            resources:
#              requests:
#                memory: $ELASTIC_ES_MASTER_MEM_REQUEST
#                cpu: $ELASTIC_ES_MASTER_CPU_REQUEST
#              limits:
#                memory: $ELASTIC_ES_MASTER_MEM_LIMIT
#                cpu: $ELASTIC_ES_MASTER_CPU_LIMIT
#            env:
#              - name: ES_JAVA_OPTS
#                value: "-Xms800m -Xmx800m"
#    volumeClaimTemplates:
#      - metadata:
#          name: elasticsearch-data
#        spec:
#          accessModes:
#            - ReadWriteOnce
#          resources:
#            requests:
#              storage: 20G
#          storageClassName: local-storage
#          selector:
#            matchLabels:
#              type: elasticsearch-master
#    count: 1
  - name: data
    config:
      # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value
      node.master: false
      node.data: true
      node.ingest: false
      node.ml: false
    podTemplate:
      metadata:
        labels:
          # additional labels for pods
          tier: $ELASTIC_ES_DATA_TIER
          component: elasticsearch-data
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - elasticsearch-data
                topologyKey: "kubernetes.io/hostname"
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        nodeSelector:
          tier: $ELASTIC_ES_DATA_TIER
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: $ELASTIC_ES_DATA_MEM_REQUEST
                cpu: $ELASTIC_ES_DATA_CPU_REQUEST
              limits:
                memory: $ELASTIC_ES_DATA_MEM_LIMIT
                cpu: $ELASTIC_ES_DATA_CPU_LIMIT
            env:
              - name: ES_JAVA_OPTS
                value: "-Xms2g -Xmx2g"
    count: $ELASTIC_ES_DATA_INSTANCES
    volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: $ELASTIC_DATA_VOLUME_SIZE
          storageClassName: do-block-storage
          selector:
            matchLabels:
              type: do-elastic
  # # inject secure settings into Elasticsearch nodes from k8s secrets references
  # secureSettings:
  # - secretName: ref-to-secret
  # - secretName: another-ref-to-secret
  #   # expose only a subset of the secret keys (optional)
  #   entries:
  #   - key: value1
  #     path: newkey # project a key to a specific path (optional)
  # http:
  #   service:
  #     spec:
  #       # expose this cluster Service with a LoadBalancer
  #       type: LoadBalancer
  #   tls:
  #     selfSignedCertificate:
  #       # add a list of SANs into the self-signed HTTP certificate
  #       subjectAltNames:
  #       - ip: 192.168.1.2
  #       - ip: 192.168.1.3
  #       - dns: elasticsearch-sample.example.com
  #     certificate:
  #       # provide your own certificate
  #       secretName: my-cert